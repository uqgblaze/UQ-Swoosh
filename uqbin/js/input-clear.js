!function(){"use strict";class t{constructor(t,e){this.input=t,this.id=t.id,this.btnClasses=["button","button--icon-only","icon--standard--clear","js-input-clear--btn"],this.context=e,this.parent=t.parentElement,this.init()}createButton(){this.parent.classList.add("input--clearable"),this.parent.insertAdjacentHTML("beforeend",'<button hidden class="'.concat(this.btnClasses.join(" "),'" \n      aria-controls="').concat(this.id,'">Clear input</button>'))}init(){this.createButton(),this.button=this.parent.querySelector(".js-input-clear--btn"),""!==this.input.value&&this.button.removeAttribute("hidden"),this.button.addEventListener("click",(t=>{this.input.value="",this.button.setAttribute("hidden","true"),t.preventDefault(),this.input.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!0}))})),this.input.addEventListener("input",(()=>{""===this.input.value?this.button.setAttribute("hidden","true"):this.button.removeAttribute("hidden")}))}}(e=>{let{behaviors:n}=e;n.inputClear={attach(e){e.querySelectorAll(".js-input-clear:not(.input-processed)").forEach((n=>{new t(n,e),n.classList.add("input-processed")}))}}})(Drupal)}();
